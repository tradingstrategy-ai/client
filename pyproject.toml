[tool.poetry]
name = "trading-strategy"
version = "0.17"
description = "Algorithmic trading, token and cryptocurrency DEX trading data, for Uniswap, Aave, PancakeSwap, Sushi, Trader Joe, others"
authors = ["Mikko Ohtamaa <mikko@tradingstrategy.ai>"]
homepage = "https://tradingstrategy.ai"
repository = "https://github.com/tradingstrategy-ai/trading-strategy"
license = "AGPL"
readme = "README.md"
keywords = ["algorithmic trading", "ethereum", "polygon", "avalanche", "aave", "arbitrum", "cryptocurrency", "uniswap", "quantitative finance", "binance", "blockchain", "pancakeswap", "polygon", "web3"]
packages = [
    { include = "tradingstrategy" },
]

[tool.poetry.dependencies]
# Web3.py dependency compatibility
# E.g. ethpm
python = ">=3.10,<3.11"
dataclasses-json = "^0.5.4"
pandas = "^1.3.5"
pyarrow = "10.0.1"
tqdm = "^4.61.2"
plotly = "^5.1.0"
jsonlines = "^3.1.0"
requests = "^2.28.1"
tqdm-loggable = "^0.1.2"

# Needed for direct data feeds
typer = {version = "^0.7.0", optional = true}
web3-ethereum-defi = "0.18.1"
dash = {version = "^2.7.1", optional = true}

# Legacy strategy and trading engines
trading-strategy-qstrader = {version="^0.5.0", optional = true}
scipy = {version="^1.6.1", optional = true}
trading-strategy-backtrader = {version="^0.1",  optional = true}
coloredlogs = {version = "^15.0.1", optional = true}

[tool.poetry.dev-dependencies]
pytest = "7.1.3"
ipdb = "^0.13.9"
coloredlogs = "^15.0.1"

memory-profiler = "^0.60.0"
poetry-core = "^1.1.0"
pytest-asyncio = "^0.19.0"


[tool.poetry.extras]
# Real-time OHLCV feeds over JSON-RPC
direct-feed = ["web3-ethereum-defi", "typer", "dash"]

# Legacy qstrader framework support
qstrader = ["scipy", "trading-strategy-qstrader"]

# Legacy backtrader framework support
backtrader = ["trading-strategy-backtrader"]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# https://docs.pytest.org/en/6.2.x/customize.html
[tool.pytest.ini_options]
addopts = "-s --tb=native"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::FutureWarning"
]